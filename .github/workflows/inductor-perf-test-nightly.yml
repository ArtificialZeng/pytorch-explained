name: inductor-A100-perf-nightly

on:
  schedule:
    - cron: 0 7 * * *
  workflow_dispatch:
    inputs:
      training:
        description: Run training?
        required: false
        type: boolean
        default: true
      inference:
        description: Run inference?
        required: false
        type: boolean
        default: false
      default:
        description: Run inductor_default?
        required: false
        type: boolean
        default: true
      dynamic:
        description: Run inductor_dynamic_shapes?
        required: false
        type: boolean
        default: true
      cudagraphs:
        description: Run inductor_cudagraphs?
        required: false
        type: boolean
        default: true
      cppwrapper:
        description: Run inductor_cpp_wrapper for inference?
        required: false
        type: boolean
        default: false
      maxautotune:
        description: Run inductor_max_autotune?
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}
  cancel-in-progress: true

jobs:
  linux-bionic-cuda11_8-py3_10-gcc7-inductor-build:
    name: cuda11.8-py3.10-gcc7-sm80
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-bionic-cuda11.8-py3.10-gcc7-sm80
      docker-image-name: pytorch-linux-bionic-cuda11.8-cudnn8-py3-gcc7-inductor-benchmarks
      cuda-arch-list: '8.0'
      test-matrix: |
        { include: [
          { config: "inductor_huggingface_perf", shard: 1, num_shards: 3, runner: "linux.gcp.a100.large" },
          { config: "inductor_huggingface_perf", shard: 2, num_shards: 3, runner: "linux.gcp.a100.large" },
          { config: "inductor_huggingface_perf", shard: 3, num_shards: 3, runner: "linux.gcp.a100.large" },
          { config: "inductor_timm_perf", shard: 1, num_shards: 5, runner: "linux.gcp.a100.large" },
          { config: "inductor_timm_perf", shard: 2, num_shards: 5, runner: "linux.gcp.a100.large" },
          { config: "inductor_timm_perf", shard: 3, num_shards: 5, runner: "linux.gcp.a100.large" },
          { config: "inductor_timm_perf", shard: 4, num_shards: 5, runner: "linux.gcp.a100.large" },
          { config: "inductor_timm_perf", shard: 5, num_shards: 5, runner: "linux.gcp.a100.large" },
          { config: "inductor_torchbench_perf", shard: 1, num_shards: 4, runner: "linux.gcp.a100.large" },
          { config: "inductor_torchbench_perf", shard: 2, num_shards: 4, runner: "linux.gcp.a100.large" },
          { config: "inductor_torchbench_perf", shard: 3, num_shards: 4, runner: "linux.gcp.a100.large" },
          { config: "inductor_torchbench_perf", shard: 4, num_shards: 4, runner: "linux.gcp.a100.large" },
        ]}

  linux-bionic-cuda11_8-py3_10-gcc7-inductor-test-nightly:
    name: cuda11.8-py3.10-gcc7-sm80
    uses: ./.github/workflows/_linux-test.yml
    needs: linux-bionic-cuda11_8-py3_10-gcc7-inductor-build
    if: github.event.schedule == '0 7 * * *'
    with:
      build-environment: linux-bionic-cuda11.8-py3.10-gcc7-sm80
      dashboard-tag: training-true-inference-true-default-true-dynamic-true-cudagraphs-true-cppwrapper-true
      docker-image: ${{ needs.linux-bionic-cuda11_8-py3_10-gcc7-inductor-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-bionic-cuda11_8-py3_10-gcc7-inductor-build.outputs.test-matrix }}
      use-gha: anything-non-empty-to-use-gha
      timeout-minutes: 720

  linux-bionic-cuda11_8-py3_10-gcc7-inductor-test:
    name: cuda11.8-py3.10-gcc7-sm80
    uses: ./.github/workflows/_linux-test.yml
    needs: linux-bionic-cuda11_8-py3_10-gcc7-inductor-build
    if: github.event_name == 'workflow_dispatch'
    with:
      build-environment: linux-bionic-cuda11.8-py3.10-gcc7-sm80
      dashboard-tag: training-${{ inputs.training }}-inference-${{ inputs.inference }}-default-${{ inputs.default }}-dynamic-${{ inputs.dynamic }}-cudagraphs-${{ inputs.cudagraphs }}-cppwrapper-${{ inputs.cppwrapper }}-maxautotune-${{ inputs.maxautotune }}
      docker-image: ${{ needs.linux-bionic-cuda11_8-py3_10-gcc7-inductor-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-bionic-cuda11_8-py3_10-gcc7-inductor-build.outputs.test-matrix }}
      use-gha: anything-non-empty-to-use-gha
      timeout-minutes: 720